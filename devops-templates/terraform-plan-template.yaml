steps:
  - task: Bash@3
    displayName: "Add GitHub SSH host key"
    inputs:
      targetType: 'inline'
      script: |
        if ! grep github.com ~/.ssh/known_hosts > /dev/null
        then
             echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
        fi

  - task: TerraformCLI@0
    displayName: Init - ${{ parameters.environment }} - ${{ parameters.component }}
    inputs:
      command: 'init'
      commandOptions: '-lock=false' # don't lock on PRs / validate phase
      backendType: 'azurerm'
      backendServiceArm: '${{ parameters.serviceConnectionName }}'
      backendAzureRmResourceGroupName: 'core-infra-${{ parameters.environment }}-rg'
      backendAzureRmStorageAccountName: 'cftappsdatademo'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: '${{ parameters.resource_key }}/${{ parameters.environment }}.tfstate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/components/${{ parameters.component }}'
  - task: TerraformCLI@0
    displayName: Plan - ${{ parameters.environment }} - ${{ parameters.component }}
    inputs:
      command: 'plan'
      commandOptions: '-out=${{ parameters.environment }}plan -var-file=${{ parameters.environment }}.tfvars'
      workingDirectory: '$(System.DefaultWorkingDirectory)/components/${{ parameters.component }}'
      environmentServiceName: '${{ parameters.serviceConnectionName }}'
  - task: Bash@3
    displayName: "Remove local tfstate"
    inputs:
      targetType: 'inline'
      workingDirectory: '$(System.DefaultWorkingDirectory)/components/${{ parameters.component }}'
      script: |
        rm -f terraform.tfstate* && rm -rf .terraform/