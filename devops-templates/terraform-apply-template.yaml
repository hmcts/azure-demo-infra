jobs:
  - deployment: Deploy
    pool:
      vmImage: ${{ parameters.agentPool }}
    environment: ${{ parameters.environment }}
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: drop
            - task: Bash@3
              displayName: 'Show files'
              inputs:
                targetType: 'inline'
                script: 'ls -lash'
                workingDirectory: '$(Pipeline.Workspace)/drop/components/${{ parameters.component }}'
            - task: TerraformCLI@0
              displayName: Init
              inputs:
                command: 'init'
                backendType: 'azurerm'
                backendServiceArm: 'DCD-CFTAPPSDATA-DEMO'
                backendAzureRmResourceGroupName: 'core-infra-demodata-rg'
                backendAzureRmStorageAccountName: 'cftappsdatademo'
                backendAzureRmContainerName: 'tfstate'
                backendAzureRmKey: 'api-mgmt.tfstate'
               # workingDirectory: '$(Pipeline.Workspace)/drop/components/demo-api-mgmt-config'
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: ${{ parameters.terraformVersion }}
            - task: TerraformCLI@0
              displayName: Apply - ${{ parameters.environment }} - ${{ parameters.component }}
              inputs:
                command: 'apply'
                commandOptions: '${{ parameters.environment }}plan'
                environmentServiceName: '${{ parameters.serviceConnectionName }}'
                workingDirectory: '$(Pipeline.Workspace)/drop/components/${{ parameters.component }}'
